<#@ template language="C#" #>
<#@ import namespace = "C60.OrchestratorReference.OrchestratorServiceReference" #>
        /// <summary>
        /// <#= this.GetRunbookComment() #>
        /// </summary>
        /// <returns>Created job Guid</returns>
        <#= IsInterface ? string.Empty : "public" #> Guid <#= this.GetRunbookFuncName() #>(<#= this.GetRunbookFuncParameters() #>)<#= IsInterface ? ";" : string.Empty #>
<# if (this.IsInterface) return this.GenerationEnvironment.ToString() +"\r\n";  #>
        {
<#
if (this.Parameters.Count > 0)
{	
#>
            Dictionary<string, object> parameters = new Dictionary<string, object>();
<#
foreach (RunbookParameter parameter in this.Parameters)
{
#>
            parameters.Add(@"<#= parameter.Name #>", <#= identifierCleaner.GetCamelName(parameter.Name) #>);
<#
}
#>

            return orchestratorProvider.ExecuteRunbook(@"<#= this.Runbook.Path #>", parameters);
<#
}
else
{
#>
            return orchestratorProvider.ExecuteRunbook(@"<#= this.Runbook.Path #>", null);
<#
}
#>
        }

